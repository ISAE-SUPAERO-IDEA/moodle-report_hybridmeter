#!/bin/bash

help="hybridmeter_dev usage : hybridmeter_dev [-help|-h] [--] <autostage|stage|build|auto_config MOODLE_ROOT_PATH> 
     \n\tautostage : Stage changes to moodle immediately and when they are changes in codesource
     \n\tstage : Stage changes to moodle only once
     \n\tbuild : build ZIP file for moodle
     \n\tautoconfig MOODLE_ROOT: Add moodle path and git root path in the hybrid_dev.env file
     \n\t--help|-h : Display this screen"

in_options=1
while [ $# -gt 0 ] && [ $in_options -eq 1 ]
do
    case $1 in
    --help | -h)
        echo -e $help
        exit 0
        shift
        ;;
    --)
        in_options=0
        shift
        ;;
    -*)
        echo -e $help>&2
        exit 1
        ;;
    *)
        in_options=0
        ;;
    esac
done

SCRIPT_PATH=$(readlink -f $0)
SCRIPT_DIR=$(dirname $SCRIPT_PATH)

. ${SCRIPT_DIR}/hybrid_dev.env

git_root_undefined=0
moodle_root_undefined=0

if [ -d "${HYBRIDMETER_GIT_ROOT}" ]
then
    SOURCE_PATH="${HYBRIDMETER_GIT_ROOT}/hybridmeter"
    DEVTOOLS_PATH="${HYBRIDMETER_GIT_ROOT}/devtools"
    VUE_PATH="${SOURCE_PATH}/vue"
else
    git_root_undefined=1
fi

if [ -d "${HYBRIDMETER_MOODLE_ROOT}" ]
then
    MOODLE_ROOT=${HYBRIDMETER_MOODLE_ROOT}
    REPORT_PATH="${MOODLE_ROOT}/report"
    HYBRIDMETER_PATH="${REPORT_PATH}/hybridmeter"
else
    moodle_root_undefined=1
fi

git_root_error="The git root path isn't defined or isn't valid, please execute ./hybridemeter_dev autoconfig MOODLE_ROOT_PATH"
moodle_root_error="The moodle root path isn't defined or isn't valid, please execute ./hybridemeter_dev autoconfig MOODLE_ROOT_PATH"

if [ "$1" = "autoconfig" ]
then
    shift

    if [ $# -eq 0 ]
    then
        echo -e $help>&2
        exit 1
    fi

    if [ ! -d $1 ]
    then
        echo "$1 isn't a valid folder path">&2
    fi

    moodle_root=$(readlink -f $1)
    git_root=$(readlink -f "${SCRIPT_DIR}/../")


    sed '/HYBRIDMETER_MOODLE_ROOT/d' "${SCRIPT_DIR}/hybrid_dev.env" > "${SCRIPT_DIR}/hybrid_dev.env"
    sed '/HYBRIDMETER_GIT_ROOT/d' "${SCRIPT_DIR}/hybrid_dev.env" > "${SCRIPT_DIR}/hybrid_dev.env"

    echo "HYBRIDMETER_MOODLE_ROOT=\"${moodle_root}\"" >> "${SCRIPT_DIR}/hybrid_dev.env"
    echo "HYBRIDMETER_GIT_ROOT=\"${git_root}\"" >> "${SCRIPT_DIR}/hybrid_dev.env"

    echo "Environment ready"
    exit 0
fi

if [ $git_root_undefined -eq 1 ]
    then
        echo $git_root_error>&2
        exit 2
    elif [ $moodle_root_undefined -eq 1 ]
    then
        echo $moodle_root_error>&2
        exit 3
fi

if [ "$1" = "autostage" ]
then
    while true
    do
        find ${SOURCE_PATH} -not -path "*hybridmeter/vue/node_modules*" | entr -dr bash ${DEVTOOLS_PATH}/stage_to_moodle.sh ${SOURCE_PATH} ${REPORT_PATH} ${VUE_PATH}
    done
    exit 0
elif [ "$1" = "stage" ]
then
    bash ${DEVTOOLS_PATH}/stage_to_moodle.sh ${SOURCE_PATH} ${REPORT_PATH} ${VUE_PATH}
    error_code=$?
    if [ $error_code -eq 0 ]
    then
        echo "Changes successfully staged to moodle"
        exit 0
    else
        echo "An error occured during the stage">&2
        exit 4
    fi
elif [ "$1" = "build" ]
then
    cd ${VUE_PATH} && npm run build && cd ${OLDPWD}
    if [ -f "${GIT_ROOT}/report_hybridmeter.zip" ]
    then
        rm "${GIT_ROOT}/report_hybridmeter.zip"
    fi
    cd ${SOURCE_PATH} && zip -r "${GIT_ROOT}/report_hybridmeter.zip" . -x "vue/*" && cd ${OLDPWD}
    exit 0
else
    echo -e $help>&2
    exit 1
fi
